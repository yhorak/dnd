@using dnd.Code.Extensions
@model Models.Spell

@{
    ViewBag.Title = "Details";
}

<style>
    .spell-name {
        font-weight: 700;
        color: slategray;
        margin-top: 20px;
        display: inline-block;
    }

    .ritual {
        font-weight: 600;
        color: gray;
        margin-top: 20px;
        margin-left: 12px;
    }
</style>

<h2> Заклинання </h2>

<div>
    <h3 class="spell-name">
        @Model.Name
    </h3>
    @if (Model.IsRitual)
    {
        <span class="ritual"> Ритуал </span>
    }
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Level)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Level)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.School)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.School)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CastDuration)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CastDuration)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Range)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Range)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Duration)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Duration)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.Raw(HttpUtility.HtmlDecode(Model.Description))
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsVoiceComponent)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsVoiceComponent)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsSomaticComponent)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsSomaticComponent)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsMaterialComponent)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsMaterialComponent)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Component)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Component)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Target)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Target)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Trigger)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Trigger)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SaveThrow)
        </dt>

        <dt>
            @Html.DisplayNameFor(model => model.NeedConcentration)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NeedConcentration)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RelatedBook)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RelatedBook)
        </dd>

    </dl>
</div>
<p>
    @if (User.IsAdmin())
    {
        @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) <text>|</text>
    }
    @Html.ActionLink("Back to List", "Index")
</p>
